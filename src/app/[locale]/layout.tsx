import type { Metadata } from 'next';
import { Inter, JetBrains_Mono, Roboto } from 'next/font/google';
import { AppRouterCacheProvider } from '@mui/material-nextjs/v15-appRouter';
import { ThemeProvider } from '@mui/material/styles';
import { theme } from './_theme';
import './globals.css';
import { Header } from '@/components/header/header';
import Container from '@mui/material/Container';
import { SnackbarContainer } from '@/components/snakbar/snacbar';
import { createServerSupabase } from '@/db/create-server';
import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { notFound } from 'next/navigation';
import { routing } from '@/i18n/routing';
import { getMessages } from 'next-intl/server';

const inter = Inter({
  variable: '--font-inter',
  subsets: ['latin'],
  weight: ['400', '500', '600', '700'],
});

const jetBrainsMono = JetBrains_Mono({
  variable: '--font-jetbrains-mono',
  subsets: ['latin'],
  weight: ['400', '500', '600', '700'],
});

const roboto = Roboto({
  weight: ['300', '400', '500', '700'],
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-roboto',
});

export const metadata: Metadata = {
  title: 'Rest Client',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  console.log('locale: layout', locale);
  const messages = await getMessages();
  console.log('messages: ', messages);

  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  const supabase = await createServerSupabase();

  const { data } = await supabase.auth.getUser();
  const userName = data?.user?.user_metadata.username;

  return (
    <html lang={locale}>
      <body
        className={`${inter.variable} ${jetBrainsMono.variable} ${roboto.variable}`}
      >
        <NextIntlClientProvider>
          <AppRouterCacheProvider>
            <ThemeProvider theme={theme}>
              <Header initialUserName={userName} />
              <Container>{children}</Container>
              <SnackbarContainer />
            </ThemeProvider>
          </AppRouterCacheProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
